= after_tw
Tweet after ActiveRecord Object saving.

== Indispensable conditions
* You have a User model. And have relations to ExternalApps model.
    class User < ActiveRecord::Base
      has_many :external_apps
    end

* You have a ExternalApps model. And have relations to User model. And have following scopes.
    class ExternalApps < ActiveRecord::Base
      belongs_to :user
      scope :twitter, lambda { where(:provider => "twitter") }
    end

* ExternalApps model has provider, uid, token and secret records.
    @tw = @user.external_apps.twitter.first
    @tw.provider # => "twitter"
    @tw.uid      # => YOUR UID of Twitter
    @tw.token    # => YOUR ACCESS TOKEN
    @tw.secret   # => YOUR ACCESS SECRET

== How to use
Gemfile
  gem 'after_tw'

config/initializers/after_tw.yml
  development:
    consumer_key:    "YOUR CONSUMER KEY"
    consumer_secret: "YOUR CONSUMER SECRET"
  production:

apps/models/blog.rb
  class Blog < ActiveRecord::Base
    after_tw :comment
  end

You specify a record which you want to tweet in your model.
When you do not a specify record, "title" is specified.

== Contributing to after_tw
 
* Check out the latest master to make sure the feature hasn't been implemented or the bug hasn't been fixed yet
* Check out the issue tracker to make sure someone already hasn't requested it and/or contributed it
* Fork the project
* Start a feature/bugfix branch
* Commit and push until you are happy with your contribution
* Make sure to add tests for it. This is important so I don't break it in a future version unintentionally.
* Please try not to mess with the Rakefile, version, or history. If you want to have your own version, or is otherwise necessary, that is fine, but please isolate to its own commit so I can cherry-pick around it.

== Copyright

Copyright (c) 2011 tiwakawa. See LICENSE.txt for
further details.

